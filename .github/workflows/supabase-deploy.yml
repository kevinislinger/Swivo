name: Deploy Supabase

on:
  push:
    branches: [main, staging]
    paths:
      - 'backend/supabase/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_PROJECT_ID: ${{ vars.SUPABASE_PROJECT_ID }}
      SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set environment variables based on branch
        id: set_env
        run: |
          if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
            echo "IS_PRODUCTION=true" >> $GITHUB_ENV
            echo "APNS_KEY_ID=${{ secrets.APNS_KEY_ID_PRODUCTION }}" >> $GITHUB_ENV
            echo "APNS_KEY_BASE64=${{ secrets.APNS_KEY_PRODUCTION_BASE64 }}" >> $GITHUB_ENV
            echo "Using production APNs credentials"
          else
            echo "IS_PRODUCTION=false" >> $GITHUB_ENV
            echo "APNS_KEY_ID=${{ secrets.APNS_KEY_ID_SANDBOX }}" >> $GITHUB_ENV
            echo "APNS_KEY_BASE64=${{ secrets.APNS_KEY_SANDBOX_BASE64 }}" >> $GITHUB_ENV
            echo "Using sandbox APNs credentials"
          fi

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest
      
      - name: Login to Supabase
        run: supabase login --token $SUPABASE_ACCESS_TOKEN
      
      - name: Link to Supabase project
        working-directory: ./backend/supabase
        run: supabase link --project-ref $SUPABASE_PROJECT_ID --password "$SUPABASE_DB_PASSWORD"
      
      - name: Deploy database migrations
        working-directory: ./backend/supabase
        run: supabase db push
      
      - name: Deploy Standard Edge Functions
        working-directory: ./backend/supabase
        run: |
          supabase functions deploy like_option --project-ref $SUPABASE_PROJECT_ID
          supabase functions deploy update_apns_token --project-ref $SUPABASE_PROJECT_ID
      
      - name: Deploy Notify Match Function with APNs Credentials
        working-directory: ./backend/supabase
        run: |
          # Create temporary .env file for the function deployment
          cat > .env.tmp << EOL
          APPLE_TEAM_ID=${{ secrets.APPLE_TEAM_ID }}
          APPLE_BUNDLE_ID=${{ secrets.APPLE_BUNDLE_ID }}
          APNS_KEY_ID=${{ env.APNS_KEY_ID }}
          APNS_KEY_BASE64=${{ env.APNS_KEY_BASE64 }}
          IS_PRODUCTION=${{ env.IS_PRODUCTION }}
          EOL
          
          # Deploy function with environment variables
          supabase functions deploy notify_match --project-ref $SUPABASE_PROJECT_ID --env-file .env.tmp
          
          # Remove temporary env file
          rm .env.tmp

      - name: Verify deployment
        working-directory: ./backend/supabase
        run: |
          echo "âœ… Supabase deployment completed"
          echo "Database migrations applied"
          echo "Edge functions deployed with APNs credentials"
          echo "Environment: $([ "$IS_PRODUCTION" == "true" ] && echo "PRODUCTION" || echo "SANDBOX")"
